import java.util.HashSet;
import java.util.Set;

public class Main {
    public static boolean isRound(int n) {
        Set<Integer> visited = new HashSet<>(); 
        visited.add(n);
        
        while (n != 1) {
            n = sumOfDigits(n);
            if (visited.contains(n)) {
                return false; 
            }
            visited.add(n);
        }
        
        return true;  
    }
    
    public static int sumOfDigitimport java.util.*;
import java.util.Set;
public class Main 
{
    
    public static boolean isround(int n)
    {
        Set<Integer>visited = new HashSet<>(); 
        while(n != 1 && !visited.contains(n))
        {
            visited.add(n);
            n = sumofdigits(n);
            
        }
        
        System.out.println(visited);
        visited.add(n);
        return n == 1;
        
    }
    
    public static int sumofdigits(int n)
    {
        int r;
        int sum = 0;
        while(n > 0)
        {
        r = n % 10;
        sum = sum + (r * r);
        n = n / 10;
        }
        
        return sum;
        
    }
    
    public static void main(String[] args)
    {
        int num = 68;
        int num1 = 123;
        int num2 = 19;
        System.out.println(num + " isround : " + isround(num));
        System.out.println(num1 + " isround : " + isround(num1));
        System.out.println(num2 + " isround : " + isround(num2));
    }
}s(int n) {
        int sum = 0;
        while (n > 0) {
            int digit = n % 10;
            sum += digit * digit;
            n /= 10;
        }
        return sum;
    }
    
    public static void main(String[] args) {
        int num = 20;
        int num1 = 68;
        int num2 = 100;
        
        System.out.println(num + " is round: " + isRound(num));
        System.out.println(num1 + " is round: " + isRound(num1));
        System.out.println(num2 + " is round: " + isRound(num2));
    }
}





OR





import java.util.*;
import java.util.Set;
public class Main 
{
    
    public static boolean isround(int n)
    {
        Set<Integer>visited = new HashSet<>(); 
        while(n != 1 && !visited.contains(n))
        {
            visited.add(n);
            n = sumofdigits(n);
            
        }
        
        System.out.println(visited);
        visited.add(n);
        return n == 1;
        
    }
    
    public static int sumofdigits(int n)
    {
        int r;
        int sum = 0;
        while(n > 0)
        {
        r = n % 10;
        sum = sum + (r * r);
        n = n / 10;
        }
        
        return sum;
        
    }
    
    public static void main(String[] args)
    {
        int num = 68;
        int num1 = 123;
        int num2 = 19;
        System.out.println(num + " isround : " + isround(num));
        System.out.println(num1 + " isround : " + isround(num1));
        System.out.println(num2 + " isround : " + isround(num2));
    }
}
